services:
  nginx:
    build:
      context: ./
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - ./docker/nginx/nginx_proxy.conf:/etc/nginx/conf.d/nginx_proxy.conf:ro
      - ./:/var/www/app:ro
    depends_on:
      php-fpm:
        condition: service_healthy
    networks:
      - default
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  php-fpm:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/app
      - php_socket:/var/run/php-fpm
      - composer_cache:/root/.composer/cache
    command: ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
    networks:
      - default
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: serverName=docker
      COMPOSER_ALLOW_SUPERUSER: 1
      APP_ENV: ${APP_ENV:-local}

  db:
    build:
      context: docker/database
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      LANG: C.UTF-8
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:alpine
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  db_data:
    name: ${VOLUME_DB_LIB}
    external: true
  redis_data:
    driver: local
  php_socket:
    driver: local
  composer_cache:
    driver: local